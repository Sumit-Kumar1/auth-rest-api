openapi: 3.0.2
info:
  title: auth-rest-api
  description: This is a basic JWT based auth API which supports user - signIn, signUp and refresh of user token.
  version: 1.0.0

servers:
  - url: "http://localhost:9001"

paths:
  /signup:
    post:
      tags:
        - User
      summary: enable user to register
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        201:
          description: user created successfully
        404:
          description: Bad Request
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    example: 404
                  message: 
                    type: string
                    example: "Unable to signup - invalid password"
        409:
          description: Status Conflict
          content:
            application/json:
              schema:
                properties:
                  code:
                    type: integer
                    example: 409
                  message: 
                    type: string
                    example: "user already exist - sumit@kumar.com"
        500:
          description: internal server error
          content:
            application/json:
              schema:
                properties:
                  code: 
                    type: integer
                    example: 500
                  message:
                    type: string
                    example: "Not able to unmarshall body"

  /signin:
    post:
      tags:
        - User
      summary: enable user to login and generate tokens
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
      responses:
        201:
          description: user login successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SignResp"
        404:
          description: bad request
          content:
            application/json:
              schema:
                properties:
                  code: 
                    type: integer
                    example: 404
                  message:
                    type: string
                    example: "unable to signIn - invalid email"
        500:
          description: internal server error
          content:
            application/json:
              schema:
                properties:
                  code: 
                    type: integer
                    example: 500
                  message:
                    type: string
                    example: "Not able to unmarshall body"
                  
  /refresh:
    post:
      tags:
        - User
      summary: enable user to login and generate tokens
      security:
        - bearerAuth: []
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            example: "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InN1bWl0QGt1bWFyLmNvbSIsImNsYWltSUQiOiIxNDExNzcyYi1jOTU1LTQ1MzUtOTNlMi1hYmIyNGVkM2I5NjUiLCJpc3MiOiJzdW1pdCBrdW1hciIsInN1YiI6InN1bWl0QGt1bWFyLmNvbSIsImV4cCI6MTczMjY5NTcwNSwibmJmIjoxNzMyNjk0ODA1LCJpYXQiOjE3MzI2OTQ4MDUsImp0aSI6IjEifQ.Jm-_fvwk3tIWZHsm9faOzSDVlRdCOkBTsUCmpZ_HIgE"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/refreshTokenReq"
      responses:
        201:
          description: user login successfully
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/refreshTokenResp"
        401:
          description: bad request
          content:
            application/json:
              schema:
                properties:
                  code: 
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: "Invalid token"
        500:
          description: internal server error
          content:
            application/json:
              schema:
                properties:
                  code: 
                    type: integer
                    example: 500
                  message:
                    type: string
                    example: "Not able to unmarshall body"

  /revoke:
    post:
      tags:
        - User
      summary: enable user to login and generate tokens
      security:
        - bearerAuth : []
      parameters:
        - in: header
          name: Authorization
          required: true
          schema:
            type: string
            example: "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InN1bWl0QGt1bWFyLmNvbSIsImNsYWltSUQiOiIxNDExNzcyYi1jOTU1LTQ1MzUtOTNlMi1hYmIyNGVkM2I5NjUiLCJpc3MiOiJzdW1pdCBrdW1hciIsInN1YiI6InN1bWl0QGt1bWFyLmNvbSIsImV4cCI6MTczMjY5NTcwNSwibmJmIjoxNzMyNjk0ODA1LCJpYXQiOjE3MzI2OTQ4MDUsImp0aSI6IjEifQ.Jm-_fvwk3tIWZHsm9faOzSDVlRdCOkBTsUCmpZ_HIgE"
      responses:
        204:
          description: token revoked successfully
        401:
          description: token invalid or expired
          content:
            application/json:
              schema:
                properties:
                  code: 
                    type: integer
                    example: 501
                  message:
                    type: string
                    example: "Invalid access token"
        500:
          description: internal server error
          content:
            application/json:
              schema:
                properties:
                  code: 
                    type: integer
                    example: 500
                  message:
                    type: string
                    example: "Failed to revoke token"
                

components:
  schemas:
    User:
      type: object
      properties:
        email:
          type: string
          description: "a valid user email address"
          example: "sumit@kumar.com"
        password:
          type: string
          description: "a minimum of 8 character long password"
          example: "sumit@kumar"
      required:
        - email
        - password

    SignResp:
      type: object
      properties:
        email:
          type: string
          example: "sumit@kumar.com"
        accessToken:
          type: string
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InN1bWl0QGt1bWFyLmNvbSIsImNsYWltSUQiOiIxNDExNzcyYi1jOTU1LTQ1MzUtOTNlMi1hYmIyNGVkM2I5NjUiLCJpc3MiOiJzdW1pdCBrdW1hciIsInN1YiI6InN1bWl0QGt1bWFyLmNvbSIsImV4cCI6MTczMjY5NTcwNSwibmJmIjoxNzMyNjk0ODA1LCJpYXQiOjE3MzI2OTQ4MDUsImp0aSI6IjEifQ.Jm-_fvwk3tIWZHsm9faOzSDVlRdCOkBTsUCmpZ_HIgE"
        refreshToken:
          type: string
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InN1bWl0QGt1bWFyLmNvbSIsImNsYWltSUQiOiJkYTBmYmUyYS03NmRkLTQwMjAtYmZjYS1jOThlYzY4NDM2YjMiLCJzdWIiOiJzdW1pdEBrdW1hci5jb20iLCJleHAiOjE3MzI3ODEyMDUsImlhdCI6MTczMjY5NDgwNX0.9es_flCknHGZsyw5NsUajYftrLtwOXT1jO_U7U7RXQQ"

    refreshTokenReq:
      type: object
      properties:
        refreshToken:
          type: string
          description: "refresh token"
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InN1bWl0QGt1bWFyLmNvbSIsImNsYWltSUQiOiJkYTBmYmUyYS03NmRkLTQwMjAtYmZjYS1jOThlYzY4NDM2YjMiLCJzdWIiOiJzdW1pdEBrdW1hci5jb20iLCJleHAiOjE3MzI3ODEyMDUsImlhdCI6MTczMjY5NDgwNX0.9es_flCknHGZsyw5NsUajYftrLtwOXT1jO_U7U7RXQQ"

    refreshTokenResp:
      type: object
      properties:
        accessToken:
          type: string
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InN1bWl0QGt1bWFyLmNvbSIsImNsYWltSUQiOiIxNDExNzcyYi1jOTU1LTQ1MzUtOTNlMi1hYmIyNGVkM2I5NjUiLCJpc3MiOiJzdW1pdCBrdW1hciIsInN1YiI6InN1bWl0QGt1bWFyLmNvbSIsImV4cCI6MTczMjY5NTcwNSwibmJmIjoxNzMyNjk0ODA1LCJpYXQiOjE3MzI2OTQ4MDUsImp0aSI6IjEifQ.Jm-_fvwk3tIWZHsm9faOzSDVlRdCOkBTsUCmpZ_HIgE"
        refreshToken:
          type: string
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6InN1bWl0QGt1bWFyLmNvbSIsImNsYWltSUQiOiJkYTBmYmUyYS03NmRkLTQwMjAtYmZjYS1jOThlYzY4NDM2YjMiLCJzdWIiOiJzdW1pdEBrdW1hci5jb20iLCJleHAiOjE3MzI3ODEyMDUsImlhdCI6MTczMjY5NDgwNX0.9es_flCknHGZsyw5NsUajYftrLtwOXT1jO_U7U7RXQQ"

    healthResp:
      type: object
      properties:
        service:
          type: string
        database:
          type: string

  securitySchemes: 
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
